{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fcharset0 Segoe UI;}}
{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red59\green182\blue60;\red182\green59\blue60;}
\viewkind4\uc1\pard\cf1\b\f0\fs24 Chat Log   C:\\Users\\acer\\Documents\\ChatLog Refresher Program _Java Full stack _ C Programming _ Python_ _Batch1_ Virtual Training at NEC 2021_09_25 13_14.rtf\b0\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 11:20: back\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 11:20: back\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 11:21: Back\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 11:21: Back\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Nagareddy Deepthi (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 11:21: Back\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 11:21: back\cf2\par
\cf3\b ananya giridhar (to Everyone)\b0 : \cf1 11:22: back\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 11:22: back\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:22: back\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 11:22: Back\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:23: back\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:23: class ForDemo \{\par
public static void main(String[] args)\{\par
  for(int count = 1; count < 11; count++)\par
     System.out.println("Count is: " + count); \par
  \}\par
\}\par
\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:25: class WhileDemo \{\par
public static void main(String[] args)\{\par
int count = 1;\par
while (count < 11) \{\par
System.out.println("Count is: " + count); count++;\par
\}\par
\}\par
\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:25: class DoWhileDemo \{\par
        public static void main(String[] args)\{\par
int count = 1;\par
do \{ System.out.println("Count is: " + count); count++; \} while (count <=11);\par
\}\par
\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:27: class Main \{ \par
\~\~\~\~public static void main(String args[]) \~\~\~\~\{ \par
\~\~\~\~first: // First label \par
\~\~\~\~\~\~\~\~for (int i = 0; i < 3; i++) \{ \par
\~\~\~\~\~\~\~\~\~\~second: \tab\tab // Second label \par
\~\~\~\~\~\~\~\~\~\~\~\~for (int j = 0; j < 3; j++) \{ \par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~if (i == 1 && j == 1) \{ \par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~// Using break statement with label \par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~break first; \par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\} \par
                if(j == 2)\par
  \tab\tab  break;     //break from loop\par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~System.out.println(i + " " + j); \par
\~\~\~\~\~\~\~\~\~\~\~\~\} \par
\~\~\~\~\~\~\~\~\} \par
\~\~\~\~\} \par
\}\par
\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:27: class Main \{ \par
\~\~\~\~public static void main(String args[]) \~\~\~\~\{ \par
\~\~\~\~first: // First label \par
\~\~\~\~\~\~\~\~for (int i = 0; i < 3; i++) \{ \par
\~\~\~\~\~\~\~\~\~\~second: \tab\tab // Second label \par
\~\~\~\~\~\~\~\~\~\~\~\~for (int j = 0; j < 3; j++) \{ \par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~if (i == 1 && j == 1) \{ \par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~// Using continue statement with label \par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~continue second; \par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\} \par
                if(j == 2)\par
  \tab\tab  continue;     //continue to next iteration\par
\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~System.out.println(i + " " + j); \par
\~\~\~\~\~\~\~\~\~\~\~\~\} \par
\~\~\~\~\~\~\~\~\} \par
\~\~\~\~\} \par
\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:28: public class Main \{\par
  public static void main(String[] args)\par
  \{\par
      System.out.println("Hello");\par
      for(int count = 1; count < 11; count++)\{\par
          if (count==7)\par
                break;\par
          if(count==5)\par
                continue;\par
         System.out.println("Count is: " + count);\par
      \}\par
  \}\par
\}\par
\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 11:29: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 11:29: Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 11:29: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 11:29: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 11:29: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 11:29: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 11:29: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 11:29: Hello\par
Count is: 1\par
Count is: 2Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:29: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b abhishek rana (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 11:30: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Nagareddy Deepthi (to Everyone)\b0 : \cf1 11:31: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Challa Bhavya (to Everyone)\b0 : \cf1 11:31: Hello\par
Count is: 1\par
Count is: 2\par
Count is: 3\par
Count is: 4\par
Count is: 6\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:32: class Main \{\par
  public static void main(String[] args) \{\par
       // create an array\par
    int[] numbers = \{3, 9, 5, -5\};\par
       // for each loop \par
    for (int number : numbers) \{\par
      System.out.println(number);\par
    \}\par
  \}\par
\}\par
\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:34: what if we want to run a for loop within a range of indexes ... can we do that using for-each syntax?\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 11:38: What if we alter any element inside the for-each body?\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:43: JCL\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:43: class Main \{\par
  public static void main(String[] args) \{\par
       // create an array\par
    int[] numbers = \{3, 9, 5, -5\};\par
       // for each loop \par
    for (int number : numbers) \{\par
      System.out.println(number);\par
    \}\par
    for(int i=0, number=numbers[0];i<numbers.length;i++)\{\par
        number=numbers[i];\par
        System.out.println(number);\par
    \}\par
  \}\par
\}\par
\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 11:43: 5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b abhishek rana (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 11:44: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 11:45: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 11:45: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 11:45: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 11:45: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 11:45: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 11:45: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\par
\cf2\par
\cf3\b Sumukh G (to Everyone)\b0 : \cf1 11:45: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\cf2\par
\cf3\b Challa Bhavya (to Everyone)\b0 : \cf1 11:46: 3\par
9\par
5\par
-5\par
3\par
9\par
5\par
-5\par
\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:47: can we do two conditionals inside a for loop?\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:47: oky\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:51: class ArrayCopyDemo\{\par
\tab public static void main(String[] args)\par
\tab\{\par
\tab\tab char[] copyFrom=\{'d','e','c','a','f','f','e','i','n','a','t','e','d'\};\par
\tab\tab char[] copyTo=new char[7];\par
\tab\tab System.arraycopy(copyFrom,2,copyTo,0,7);\par
\tab\tab System.out.println(new String(copyTo));\par
\tab\}\par
\}\par
//char obj[] -> bad construct\par
//char[] obj\par
//we used method arraycopy that takes two array objects\par
//public static void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 11:52: caffein\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 11:52: caffein\par
\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 11:52: caffein\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 11:52: caffein\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 11:52: caffein\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 11:52: caffein\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 11:52: caffein\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 11:52: caffein\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 11:52: caffein\par
\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:52: caffein\par
\cf2\par
\cf3\b Challa Bhavya (to Everyone)\b0 : \cf1 11:52: caffein\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 11:52: caffein\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 11:52: caffein\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 11:52: caffein\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 11:52: caffein\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 11:53: caffein\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 11:53: caffein\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:54: Ma'am if we want to copy the alternate elements then how will we do it using arraycopy?\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:54: okay ma'am\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:54: class\~Testarray\{\~\~\par
static\~void\~min(int[]\~arr)\{\~\~\par
int\~min=arr[0];\~\~\par
for(int\~i=1;i<arr.length;i++)\~\~\par
\~if(min>arr[i])\~\~\par
\~\~min=arr[i];\~\~\par
\~\~System.out.println(min);\~\~\par
\}\~\~\par
\~public\~static\~void\~main(String[]\~args)\{\~\~\par
\~int[]\~a=\{33,3,4,5\};\~\~\par
min(a);//passing\~array\~to\~method\~\~\par
\~\}\}\~\~\par
\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:54: do we have a global variable like INT_MIN as in cpp\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 11:55: subarray will only copy.\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 11:56: 3\par
\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 11:56: 3\cf2\par
\cf3\b ananya giridhar (to Everyone)\b0 : \cf1 11:57: 3\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:07: public class arrToMethod \{\par
\tab\par
\tab\par
\tab     public static void main(String[] args)\par
\tab     \{\par
\tab        for (int i = 0; i <= 3; i++)\par
\tab         \{\par
\tab             for (int j = 0; j <= i; j++)\par
\tab             \{\par
\tab                 System.out.print(i + " ");\par
\tab             \}\par
\tab             System.out.println();\par
\tab         \}\par
\tab        System.out.println();\par
\tab        System.out.println();\par
\tab        \par
\tab        for (int i = 1; i <= 4; i++)\par
\tab         \{\par
\tab             for (int j = 1; j <= i; j++)\par
\tab             \{\par
\tab                 System.out.print(j + " ");\par
\tab             \}\par
\tab             System.out.println();\par
\tab         \}\par
\tab     \}\par
\tab\}\par
\cf2\par
\cf4\b Atul Gupta (to Monica)\b0 : \cf1 12:09: package TestPk;\par
import java.util.*;\par
\par
public class loop \{\par
public static void main(String[] args) \{\par
\tab  int a;\par
 Scanner sc=new Scanner(System.in); //System.in is a standard input stream.\par
 System.out.print("Enter first number- ");\par
   a=sc.nextInt();\par
   for(int i=1;i<n+1;i++)\par
   \{\par
\tab    for(int j=1;j<i+1;j++)\par
\tab    \{\par
\tab\tab   System.out.println(i+" ");\par
\tab    \}\par
\tab    System.out.println();\par
\tab    \par
   \}\par
\}\par
\tab\par
\}\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:12: class Testarray\{\par
public static void main(String args[])\{\par
int arr[][]=\{\{1,2,3\},\{2,4,5\},\{4,4,5\}\};\par
for(int i=0;i<3;i++)\{\par
 for(int j=0;j<3;j++)\{\par
  System.out.print(arr[i][j]+" ");\par
 \}\par
 System.out.println();\par
\}\par
\}\par
\}\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b yashas anand (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \par
\cf2\par
\cf4\b Atul Gupta (to Monica)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \par
\cf2\par
\cf3\b ananya giridhar (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:13: 1 2 3 \par
2 4 5 \par
4 4 5 \par
\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5\cf2\par
\cf3\b abhishek rana (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5 \par
\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5 \par
\cf2\par
\cf3\b Nagareddy Deepthi (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:14: class MultiDimArrayDemo\par
\{\par
\tab public static void main(String[] args)\par
\tab\{\par
\tab\tab String[][] names=\{\{"Mr.","Mrs.","Ms."\},\{"Smith","Jones"\}\};\par
\tab\tab System.out.println(names[0][0] + names[1][0]);\par
\tab\tab //Mr. Smith\par
\tab\tab System.out.println(names[0][2] + names[1][1]);\par
\tab\tab //Mr. Jones\par
\tab\}\par
\}\par
\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5 \par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5 \cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:14: 1 2 3 \par
2 4 5 \par
4 4 5 \par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:15: Mr.SmithMs.Jones\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 12:15: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:15: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:15: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 12:15: Mr.Smith\par
Ms.Jones\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:15: Mr.Smith\par
Ms.Jones\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:15: Mr.Smith\par
Ms.Jones\par
\cf2\par
\cf3\b abhishek rana (to Everyone)\b0 : \cf1 12:15: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:15: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:16: Mr.Smith\par
Ms.Jones\par
\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:16: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:16: Mr.Smith\par
Ms.Jones\par
\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 12:16: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:16: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 12:16: Mr.Smith\par
Ms.Jones\par
\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:17: Mr.Smith\par
Ms.Jones\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:17: Mr.Smith\par
Ms.Jones\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:18: Mr.Smith\par
Ms.Jones\par
\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:26: do we have something like mro in java like we have in python??\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:27: method resolution order\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:27: ok ma'am \cf2\par
\cf3\b Mohit Rai (to Everyone)\b0 : \cf1 12:33: maam why interface dont face ambiguity error??\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:37: Mam one ques....which is better interface or abstract class?\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:37: ok mam\cf2\par
\cf3\b Mohit Rai (to Everyone)\b0 : \cf1 12:42: maam why this virtual space facility is not provided in class multiple interface????\cf2\par
\cf3\b Mohit Rai (to Everyone)\b0 : \cf1 12:42: inheritence\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 12:52: can you send bank program?\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:53: abstract class Bank \{\par
\tab abstract int getRateOfInterest();\par
\}\par
\par
class SBI extends Bank \{\par
\tab int getRateOfInterest() \{\par
\tab\tab return 2;\par
\tab\}\par
\}\par
\par
class PNB extends Bank \{\par
\tab int getRateOfInterest() \{\par
\tab\tab return 1;\par
\tab\}\par
\}\par
\par
public class TestBank \{\par
\tab public static void main(String args[]) \{\par
\tab\tab Bank b = new SBI();// if object is PNB, method of PNB will be invoked\par
\tab\tab int interest = b.getRateOfInterest();\par
\tab\tab System.out.println("Rate of Interest is: " + interest + " %");\par
\tab\}\par
\}\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:53: Rate of Interest is: 2 %\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:53: Rate of Interest is: 2 %\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:53: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b abhishek rana (to Everyone)\b0 : \cf1 12:53: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 12:53: Rate of Interest is: 2 %\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:53: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 12:53: Rate of Interest is: 2 %\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\cf2\par
\cf3\b Challa Bhavya (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\cf2\par
\cf3\b Nagareddy Deepthi (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:54: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b Sumukh G (to Everyone)\b0 : \cf1 12:55: Rate of Interest is: 2 %\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 12:55: Rate of Interest is: 2 %\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:55: Rate of Interest is: 2 %\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:55: interface Printable\{  \par
void print();  \par
\}  \par
interface Showable\{  \par
void print();  \par
\}  \par
class TestTnterface implements Printable, Showable\{  \par
public void print()\{\par
System.out.println("Hello");\par
\}  \par
public static void main(String args[])\{  \par
TestTnterface1 obj = new TestTnterface1();  \par
obj.print();  \par
 \}  \par
\}  //Output: Hello\par
\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 12:56: Rate of Interest is: 2 %\par
\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 12:57: Hello\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 12:57: Hello\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:57: Hello\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 12:57: Hello\par
\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:57: Hello\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 12:57: Hello\cf2\par
\cf3\b abhishek rana (to Everyone)\b0 : \cf1 12:57: Hello\par
\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:57: Hello\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:57: Hello\par
\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:57: Hello\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:58: Hello\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 12:58: Hello\par
\cf2\par
\cf3\b yashas anand (to Everyone)\b0 : \cf1 12:58: Hello\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 12:58: Hello\cf2\par
\cf3\b Nagareddy Deepthi (to Everyone)\b0 : \cf1 12:58: Hello\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 12:58: Hello\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:58: interface\~Printable\{\~\~\par
void\~print();\~\~\par
\}\~\~\par
interface\~Showable\~extends\~Printable\{\~\~\par
void\~show();\~\~\par
\}\~\~\par
class\~Testinterface2\~implements\~Showable\{\~\~\par
public\~void\~print()\{System.out.println("Hello");\}\~\~\par
public\~void\~show()\{System.out.println("Welcome");\}\~\~\par
public\~static\~void\~main(String\~args[])\{\~\~\par
Testinterface2\~obj\~=\~new\~Testinterface2();\~\~\par
obj.print();\~\~\par
obj.show();\~\~\par
\~\}\~\~\par
\}\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:58: Hello\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:58: Hello\par
\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:59: Hello\par
\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:59: Hello\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:59: Hello\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:59: Hello\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 13:00: Hello\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 13:00: Hello\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 13:00: Hello\par
Welcome\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 13:00: Hello\par
Welcome\par
\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 13:00: Hello\par
Welcome\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 13:01: Hello\par
Welcome\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 13:01: Hello\par
Welcome\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 13:01: Hello\par
Welcome\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 13:01: Hello\par
Welcome\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 13:01: Hello\par
Welcome\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 13:02: Hello\par
Welcome\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 13:02: Hello\par
Welcome\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 13:02: Hello\par
Welcome\par
\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 13:03: Hello\par
Welcome\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 13:04: interface abc\{\par
\tab void show();\par
\}\par
interface Printable extends abc \{\par
\tab void print();\par
\}\par
interface Showable extends abc \{\par
\tab void print();\par
\}\par
public class TestTnterface1 implements Printable, Showable \{\par
\tab public void show() \{\par
\tab\tab System.out.println("Hello Show");\par
\tab\}\par
\tab public void print() \{\par
\tab\tab System.out.println("Hello");\par
\tab\}\par
\tab public static void main(String args[]) \{\par
\tab\tab TestTnterface1 obj = new TestTnterface1();\par
\tab\tab obj.print();\par
\tab\tab obj.show();\par
\tab\}\par
\} // Output: Hello\par
\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 13:04: Hello\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 13:05: Hello\par
Hello Show\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 13:05: Hello\par
Hello Show\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 13:05: Hello\par
Hello Show\par
\cf2\par
\cf3\b abhishek rana (to Everyone)\b0 : \cf1 13:05: Hello\par
Hello Show\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 13:05: Hello\par
Hello Show\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 13:06: Hello\par
Hello Show\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 13:06: Hello\par
Hello Show\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 13:06: Hello\par
Hello Show\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 13:06: interface abc\{\par
\tab default void show() \{\par
\tab\tab System.out.println("Hello Show");\par
\tab\}\par
\}\par
interface Printable extends abc \{\par
\tab void print();\par
\}\par
interface Showable extends abc \{\par
\tab void print();\par
\}\par
public class TestTnterface1 implements Printable, Showable \{\par
\tab public void print() \{\par
\tab\tab System.out.println("Hello");\par
\tab\}\par
\tab public static void main(String args[]) \{\par
\tab\tab TestTnterface1 obj = new TestTnterface1();\par
\tab\tab obj.print();\par
\tab\tab obj.show();\par
\tab\}\par
\} // Output: Hello\par
\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 13:06: Hello\par
Hello Show\par
\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 13:06: Hello\par
Hello Show\par
\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 13:07: Hello\par
Hello Show\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 13:07: Hello\par
Hello Show\par
\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 13:08: Hello\par
Hello Show\cf2\par
\cf3\b yashas anand (to Everyone)\b0 : \cf1 13:08: Hello\par
Hello Show\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 13:09: Hello\par
Hello Show\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 13:11: interface abc\{\par
\tab default void show() \{\par
\tab\tab System.out.println("Hello Show");\par
\tab\}\par
\}\par
interface Printable extends abc \{\par
\tab void print();  //by default all interface methods are public, abstract\par
\}\par
interface Showable extends abc \{\par
\tab void print();\par
\}\par
public class TestTnterface1 implements Printable, Showable \{\par
\tab public void print() \{\par
\tab\tab System.out.println("Hello");\par
\tab\}\par
\tab public static void main(String args[]) \{\par
\tab\tab TestTnterface1 obj = new TestTnterface1();\par
\tab\tab obj.print();\par
\tab\tab obj.show();\par
\tab\}\par
\} // Output: Hello\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 13:12: https://chat.whatsapp.com/K2dF3P0s4lW9R4V0IGkbUQ\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 13:13: Okay Ma'am\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 13:13: thankyou mam\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 13:13: Thanku mam\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 13:13: Thanku mam\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 13:13: thank you ma'am\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 13:13: than you maam\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 13:13: Thank you Ma'am\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 13:13: thank you mam\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 13:13: Thank you\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 13:13: Thankyou Ma'am\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 13:13: thank you maam\cf2\par
\cf3\b Challa Bhavya (to Everyone)\b0 : \cf1 13:14: thank you mam\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 13:14: thank you maam\cf2\par
\cf3\b  K Prasanna Kumar (to Everyone)\b0 : \cf1 13:14: Thank you Ma'am\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 13:14: thank you mam\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 13:14: Thank you mam\cf0\par
}
 