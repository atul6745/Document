{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fcharset0 Segoe UI;}}
{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red59\green182\blue60;\red182\green59\blue60;}
\viewkind4\uc1\pard\cf1\b\f0\fs24 Chat Log   C:\\Users\\acer\\Documents\\ChatLog Refresher Program _Java Full stack _ C Programming _ Python_ _Batch1_ Virtual Training at NEC 2021_10_04 13_08.rtf\b0\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 09:43: import java.util.*;\par
\par
public class MainPrg \{\par
\par
    public static void main(String[] aa) \{\par
    \tab     \tab\par
        List<String> gamesList = new ArrayList<String>();\par
        gamesList.add("Foo");\par
        gamesList.add("acr");\par
        gamesList.add("ammeee");\par
        gamesList.add("akk");\par
        gamesList.forEach(a -> System.out.print(a.length() ==3 && a.charAt(0)=='a'? a+"\\n": ""));\par
        \par
    \}\par
\}\par
\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 09:44: acr\par
akk\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 09:45: acr\par
akk\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 09:45: acr\par
akk\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 09:45: acr\par
akk\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 09:45: acr\par
akk\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b Abhishek Rana (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 09:45: acr\par
akk\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 09:45: acr\par
akk\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 09:45: acr\par
akk\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 09:46: acr\par
akk\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 09:48: acr\par
akk\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 09:55: import java.util.*;\par
interface tempPredicate\{\par
\tab Boolean test();\par
\}\par
interface temp2Predicate<T>\{\par
\tab Boolean test(T x);\par
\}\par
\par
public class MainPrg \{\par
\par
    public static void main(String[] aa) \{\par
    \tab     temp2Predicate<Integer> t=(x)\tab -> x > 9;\par
    \tab     System.out.println(t.test(10));\par
    \tab     temp2Predicate<String> t2=(x)\tab -> x.length() > 9;\par
    \tab     System.out.println(t2.test("Java Prg"));       \par
    \}\par
\}\par
\par
//Returning boolean values are very imp part of any project:\par
//testing of s/w; condition check\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 09:56: true\par
false\par
\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 09:56: true\par
false\par
\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 09:56: true\par
false\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 09:56: true\par
false\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 09:56: true\par
false\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 09:56: true\par
false\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 09:56: true\par
false\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 09:56: true\par
false\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 09:56: true\par
false\par
\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 09:56: v\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 09:56: true\par
false\par
\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 09:56: true\par
false\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 09:56: true\par
false\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 09:56: true\par
false\par
\cf2\par
\cf3\b Abhishek Rana (to Everyone)\b0 : \cf1 09:57: true\par
false\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 09:57: true\par
false\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 09:57: true\par
false\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 09:57: true\par
false\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 09:57: true\par
false\par
\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 09:57: true\par
false\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 09:57: true\par
false\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 09:58: true\par
false\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 10:09: import java.util.*;\par
interface temp2Predicate<T>\{\par
\tab Boolean test(T x);\par
\}\par
interface tempFunction<T, R>\{\par
\tab R apply(T a); //these FI are very imp to be linked with a function\par
\}\par
interface tempConsumers<T>\{\par
\tab void accept(T a); //these FI are very imp to be linked with consumers\par
\}\par
interface tempSuppliers<T>\{\par
\tab T get(); //these FI are very imp to be linked with supplier model\par
\}\par
\par
public class MainPrg \{\par
\tab int fn(String s) \{ return s.length();\tab\}\par
    public static void main(String[] aa) \{\par
    \tab     temp2Predicate<Integer> t=(x)\tab -> x > 9;\par
    \tab     System.out.println(t.test(10));\par
    \tab     temp2Predicate<String> t2=(x)\tab -> x.length() > 9;\par
    \tab     System.out.println(t2.test("Java Prg"));  \par
    \tab     tempFunction<String, Integer> t3=(new MainPrg())::fn;\par
    \tab     System.out.println(t3.apply("Java Prg"));\par
    \tab     tempFunction<String, Integer> t4=Integer::parseInt;\par
    \tab     System.out.println(t4.apply("56") + 40);\par
    \tab     tempConsumers<String> t5=System.out::println;\par
    \tab     t5.accept("Java Consumers");\par
    \tab     tempSuppliers<String> t6=()->"supplied value";\par
    \tab     System.out.println(t6.get());;\par
    \tab     \par
    \}\par
\}\par
\par
//Returning boolean values are very imp part of any project:\par
//testing of s/w; condition check\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 10:09: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 10:09: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b Abhishek Rana (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 10:10: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 10:11: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 10:11: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 10:11: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 10:11: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 10:11:  true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 10:11: yes ma'am\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 10:11: yes ma'am\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 10:11: yes mam clear\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 10:11: Yes mam\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 10:11: yes ma'am\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 10:11: Yes Ma'am\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 10:12: true\par
false\par
8\par
96\par
Java Consumers\par
supplied value\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 10:14: Prepare a class with all the add(), sub(), mul(), divide()\par
Prepare a FI for calculating according to the functions referred.\par
Use Method Reference\par
Hint: \par
Class A\{\par
Add(), sub(), mul(), div()\}\par
Interface MathOp\{ op();\}\par
Class Main()\{\par
Method reference to the class A via the obj of MathOp;\par
\}\par
Show the usage\par
\par
\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 10:15: Mam I am getting error in previous example\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 10:17: import java.util.*;\par
interface temp2Predicate<T>\{\par
\tab Boolean test(T x);\par
\}\par
interface tempFunction<T, R>\{\par
\tab R apply(T a); //these FI are very imp to be linked with a function\par
\}\par
interface tempConsumers<T>\{\par
\tab void accept(T a); //these FI are very imp to be linked with consumers\par
\}\par
interface tempSuppliers<T>\{\par
\tab T get(); //these FI are very imp to be linked with supplier model\par
\}\par
\par
public class MainPrg \{\par
\tab int fn(String s) \{ return s.length();\tab\}\par
    public static void main(String[] aa) \{\par
    \tab     temp2Predicate<Integer> t=(x)\tab -> x > 9;\par
    \tab     System.out.println(t.test(10));\par
    \tab     temp2Predicate<String> t2=(x)\tab -> x.length() > 9;\par
    \tab     System.out.println(t2.test("Java Prg"));  \par
    \tab     tempFunction<String, Integer> t3=(new MainPrg())::fn;\par
    \tab     System.out.println(t3.apply("Java Prg"));\par
    \tab     tempFunction<String, Integer> t4=Integer::parseInt;\par
    \tab     System.out.println(t4.apply("56") + 40);\par
    \tab     tempConsumers<String> t5=System.out::println;\par
    \tab     t5.accept("Java Consumers");\par
    \tab     tempSuppliers<String> t6=()->"supplied value";\par
    \tab     System.out.println(t6.get());;\par
    \tab     \par
    \}\par
\}\par
\par
//Returning boolean values are very imp part of any project:\par
//testing of s/w; condition check\par
\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 10:18: hyy\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 10:33: Tea break 15+5 min\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 10:36: tea break\cf2\par
\cf4\b Atul Gupta (to Monica)\b0 : \cf1 10:45: package projcollecjava8;\par
\par
class A\{\par
\tab  public int add(int x, int y) \{\par
\tab   \par
\tab    return x+y;\par
\tab  \}\par
\tab  public int sub(int x, int y) \{\par
\tab\tab   \par
\tab\tab    return x-y;\par
\tab  \}\par
\tab  \par
\tab  public int mult(int x, int y) \{\par
\tab\tab   \par
\tab\tab    return x*y;\par
\tab\tab  \}\par
\tab  public int div(int x, int y) \{\par
\tab\tab   \par
\tab\tab    return x/y;\par
\tab\tab  \}\par
\tab\}\par
interface MathOp\{\par
\tab  int sp(int a, int b);\par
\tab\}\par
\tab public class op \{\par
\tab  public static void main(String[] args) \{\par
\tab   A a=new A();\par
\tab   MathOp addition=a::add;  \par
\tab   System.out.println(addition.sp(4, 3));\par
\tab   MathOp subtract=a::sub;  \par
\tab   System.out.println(subtract.sp(4, 3));\par
\tab   MathOp multiply=a::mult;  \par
\tab   System.out.println(multiply.sp(4, 3));\par
\tab   MathOp division=a::div;  \par
\tab   System.out.println(division.sp(4, 3));\par
\tab   \par
\tab   \par
\tab   \par
\tab  \}\par
\tab\}\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 10:52: back\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 10:55: back\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 10:55: back\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 10:56: Back\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 10:56: back\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 10:56: back\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 10:56: Back\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 10:57: back\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 10:57: back\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 10:58: back\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 10:59: back\cf2\par
\cf3\b Abhishek Rana (to Everyone)\b0 : \cf1 11:05: Yes\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 11:05: YES\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:06: YES\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 11:06: yes mam\cf2\par
\cf3\b Challa Bhavya (to Everyone)\b0 : \cf1 11:06: Yes\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 11:06: YES\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 11:06: Yes\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 11:06: yes\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 11:06: YES\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 11:06: yes\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 11:07: yes\cf2\par
\cf3\b Mohit Rai (to Everyone)\b0 : \cf1 11:07: yes maam\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 11:07: Yes\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 11:07: Yes mam\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 11:07: Yes ma'am\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 11:07: yes ma'am\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 11:07: Yes ma'am;\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 11:07: yes mam\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 11:07: yes\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 11:07: yes ma'am\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:08: yes\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:09: import java.util.*;\par
public class Test \{\par
\par
    public static void main(String[] aa) \{\par
        List<String> gamesList = new ArrayList<String>();\par
        gamesList.add("Foo");\par
        gamesList.add("acr");\par
        gamesList.add("ammeee");\par
        gamesList.add("akk");\par
        gamesList.forEach(a -> System.out.print(a.length() ==3 && a.charAt(0)=='a'? a+"\\n": ""));\par
        //gamesList.stream().filter(a -> a.length() ==3 && a.charAt(0)=='a').forEach(a->System.out.println(a));\par
        \par
\}\par
\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:09: Given a list of Strings, write a method that returns a list of all strings that start with the letter 'a' (lower case) and have exactly 3 letters. \par
TIP: Use Java 8 Lambdas and Streams API's.\par
Method Reference for the Lambda code already shared.\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 11:23: yes mam\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:38: package a;\par
import java.util.*;\par
interface tempPrd\{\par
\tab Boolean test(String s);\par
\}\par
class A\{\par
\tab Boolean test(String a) \{\par
\tab\tab return (a.length() ==3 && a.charAt(0)=='a');\par
\tab\}\par
\}\par
public class Test \{\par
\par
    public static void main(String[] aa) \{\par
        List<String> gamesList = new ArrayList<String>();\par
        gamesList.add("Foo");\par
        gamesList.add("acr");\par
        gamesList.add("ammeee");\par
        gamesList.add("akk");\par
        tempPrd t=(new A())::test;\par
        gamesList.forEach(a -> System.out.print(t.test(a)? a+"\\n": ""));\par
        \par
\}\par
\}\par
\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:38: \par
import java.util.*;\par
\par
\par
interface Solution\{\par
 String op(String s);\par
\}\par
public class E_MethodRef2 \{\par
 public String ans(String a) \{\par
  return a.length() ==3 && a.charAt(0)=='a'? a+"\\n": "" ;\par
  \par
 \}\par
    public static void main(String[] aa) \{\par
        List<String> gamesList = new ArrayList<String>();\par
        E_MethodRef2 sol = new E_MethodRef2();\par
        gamesList.add("Foo");\par
        gamesList.add("acr");\par
        gamesList.add("ammeee");\par
        gamesList.add("akk");\par
        Solution ok = sol::ans;\par
        gamesList.forEach(a -> System.out.print(ok.op(a)));\par
        //gamesList.stream().filter(a -> a.length() ==3 && a.charAt(0)=='a').forEach(a->System.out.println(a));\par
        \par
\}\par
\}\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 11:38: import java.util.*;\par
\par
class A\{\par
    List<String> filter(List<String> list)\{\par
        List<String> filtered = new ArrayList<String>();\par
        Iterator<String> itr=list.iterator();\par
        String tmp;\par
        while(itr.hasNext())\{\par
            tmp=itr.next();\par
            if(tmp.length()==3 && tmp.charAt(0)=='a')\par
                filtered.add(tmp);\par
        \}\par
        return filtered;\par
    \}\par
\}\par
\par
interface filtering\{\par
    List<String> operation(List<String> list);\par
\}\par
\par
public class MainPrg \{\par
    \par
    public static void main(String[] aa) \{\par
          \par
        List<String> gamesList = new ArrayList<String>();\par
        gamesList.add("Foo");\par
        gamesList.add("acr");\par
        gamesList.add("ammeee");\par
        gamesList.add("akk");\par
        \par
        A obj=new A();\par
        filtering ob=obj::filter;\par
        List<String> result = ob.operation(gamesList);\par
        \par
        System.out.println(result);\par
    \}\par
\}\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 11:39: interface tempFunction<T, R> \{\par
 R apply(T a);\par
\}\par
public class Class1 \{\par
 int fn(String s) \{\par
  return s.length();\par
 \}\par
\par
 public static void main(String[] args) \{\par
\par
  List<String> gamesList = new ArrayList<String>();\par
  gamesList.add("Foo");\par
  gamesList.add("acr");\par
  gamesList.add("ammeee");\par
  gamesList.add("akk");\par
  tempFunction<String, Integer> t3 = (new Class1())::fn;\par
  gamesList.forEach(a -> System.out.print( t3.apply(a)== 3 && a.charAt(0) == 'a' ? a + "\\n" : ""));\par
\par
 \}\par
\}\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 11:41: acr\par
akk\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 11:41: [acr, akk]\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:41: acr\par
akk\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 11:41: acr\par
akk\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 11:41: acr\par
akk\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 11:41: acr\par
akk\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 11:41: acr\par
akk\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 11:41: acr\par
akk\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 11:41: acr\par
akk\cf2\par
\cf3\b Abhishek Rana (to Everyone)\b0 : \cf1 11:41: acr\par
akk\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 11:41: acr\par
akk\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:41: Given a list of Strings, write a method that returns a list of all strings that start with the letter 'a' (lower case) and have exactly 3 letters. \par
TIP: Use Java 8 Lambdas and Streams API's.\par
Method Reference for the Lambda code already shared.\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 11:42: acr\par
akk\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 11:42: acr\par
akk\par
\cf2\par
\cf3\b Saloni Dhawan (to Everyone)\b0 : \cf1 11:42: [acr, akk]\cf2\par
\cf3\b Harshit Mimani (to Everyone)\b0 : \cf1 11:42: acr\par
akk\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 11:43: acr\par
akk\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 11:43: acr\par
akk\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 11:44: okk mam\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 11:45: Method ref works only with functional interfaces ryt? or are there any more use cases of method ref?\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:53: package a;\par
import java.util.*;\par
class A\{\par
\tab void apply(String a) \{\par
\tab\tab System.out.print((a.length() ==3 && a.charAt(0)=='a')? a+"\\n": "");\par
\tab\}\par
\}\par
public class Test \{\par
\par
    public static void main(String[] aa) \{\par
        List<String> gamesList = new ArrayList<String>();\par
        gamesList.add("Foo");\par
        gamesList.add("acr");\par
        gamesList.add("ammeee");\par
        gamesList.add("akk");\par
        gamesList.forEach((new A())::apply);\par
        \par
\}\par
\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 11:57: package a;\par
import java.util.*;\par
class A<T>\{\par
\tab void apply(T a) \{\par
\tab\tab if(a instanceof String) \{\par
\tab\tab\tab System.out.print((a.toString().length() ==3 && a.toString().charAt(0)=='a')? a+"\par
": "");\par
\tab\tab\}\par
\tab\}\par
\}\par
public class Test \{\par
\par
    public static void main(String[] aa) \{\par
        List<String> gamesList = new ArrayList<String>();\par
        gamesList.add("Foo");\par
        gamesList.add("acr");\par
        gamesList.add("ammeee");\par
        gamesList.add("akk");\par
        gamesList.forEach((new A<String>())::apply);\par
        \par
\}\par
\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:08: import java.util.function.*;\par
public class MainClass \{\par
    public static void main(String[] args) \{\par
       int age=20;\par
    \tab Predicate<Integer> pr= a -> a>18;\par
    \tab if(pr.test(age)) \{\par
    \tab\tab System.out.println("Eligible to vote");\par
    \tab\}\par
    \tab else\par
    \tab\tab System.out.println("Not Eligible to vote");\par
    \tab\par
    \par
    \}\par
\}\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:09: Eligible to vote\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:09: Eligible to vote\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:09: Eligible to vote\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:09: Eligible to vote\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 12:09: Eligible to vote\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:09: Eligible to vote\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:09: Eligible to vote\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:10: import java.util.function.Predicate;  \par
public class PredicateInterfaceExample \{  \par
    static Boolean checkAge(int age)\{  \par
        if(age>17)  \par
            return true;  \par
        else return false;  \par
    \}  \par
    public static void main(String[] args)\{  \par
        // Using Predicate interface  \par
        Predicate<Integer> predicate =  PredicateInterfaceExample::checkAge;  \par
        // Calling Predicate method  \par
        boolean result = predicate.test(25);  \par
        System.out.println(result);  \par
    \}  \par
\} \par
\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:10: Eligible to vote\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 12:11: true\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:11: true\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:11: true\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:11: true\par
\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 12:11: true\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 12:11: true\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:11: true\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:11: true\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 12:11: true\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 12:11: true\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:12: true\par
\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:12: true\par
\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 12:12: true\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:12: true\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:12: true\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:12: true\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:17: // Importing Consumer interface  \par
import java.util.function.Consumer;  \par
public class ConsumerInterfaceExample \{  \par
    static void printMessage(String name)\{  \par
        System.out.println("Hello "+name);  \par
    \}  \par
    static void printValue(int val)\{  \par
        System.out.println(val);  \par
    \}  \par
    public static void main(String[] args) \{  \par
        // Referring method to String type Consumer interface   \par
        Consumer<String> consumer1 = ConsumerInterfaceExample::printMessage;  \par
        consumer1.accept("John");   // Calling Consumer method  \par
        // Referring method to Integer type Consumer interface  \par
        Consumer<Integer> consumer2 = ConsumerInterfaceExample::printValue;  \par
        consumer2.accept(12);   // Calling Consumer method  \par
    \}  \par
\} \par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:18: Hello John\par
12\cf2\par
\cf3\b Abhishek Rana (to Everyone)\b0 : \cf1 12:18: Hello John\par
12\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 12:18: Hello John\par
12\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 12:18: Hello John\par
12\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 12:18: Hello John\par
12\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\par
\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\par
\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\par
\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:19: Hello John\par
12\par
\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 12:20: Hello John\par
12\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:20: Hello John\par
12\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:20: Hello John\par
12\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 12:20: Hello John\par
12\par
\cf2\par
\cf3\b Syed Ali Abbas (to Everyone)\b0 : \cf1 12:20: Hello John\par
12\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:20: Hello John\par
12\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:23: import java.util.ArrayList;\par
import java.util.Arrays;\par
import java.util.List;\par
import java.util.function.Consumer;\par
public class ConsumerExample\{\par
  public static void main(String args[])\{\par
    Consumer<Integer> consumer= i-> System.out.print(" "+i);\par
    List<Integer> integerList=Arrays.asList(1, 10, 200, 101, -10, 0);\par
    printList(integerList, consumer);\par
 \}\par
 public static void printList(List<Integer> listOfIntegers, Consumer<Integer> consumer)\{\par
  for(Integer integer:listOfIntegers)\{\par
    consumer.accept(integer);\par
  \}\par
 \}\par
\}\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:23:  1 10 200 101 -10 0\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:24:  1 10 200 101 -10 0\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 12:24:  1 10 200 101 -10 0\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\par
\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\par
\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\par
\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 12:24:  1 10 200 101 -10 0\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:24:  1 10 200 101 -10 0\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:24:  1 10 200 101 -10 0\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:24: 1 10 200 101 -10 0\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:24:  1 10 200 101 -10 0\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:25: 1 10 200 101 -10 0\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:25: 1 10 200 101 -10 0\cf2\par
\cf3\b Saloni Dhawan (to Everyone)\b0 : \cf1 12:27:  1 10 200 101 -10 0\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:42: import java.util.function.*;\par
interface tempCon<T>\{\par
\tab void accept(T  x);\par
\tab default tempCon<T> andThen(tempCon<? super T> t)\par
\tab\{\par
\tab\tab //t.accept(x);\par
\tab\tab tempCon<T> t2=(x) -> \{accept(x); t.accept(x);\};\par
\tab\tab return t2;\tab\tab\par
\tab\}\par
\}\par
public class MainClass \{\par
    public static void main(String[] args) \{\par
       tempCon<String> t1=i->System.out.println(i);  \par
       tempCon<String> t2=i->System.out.println(" with length : " + i.length()); \par
       tempCon<String> t3=t1.andThen(t2); //t1.accept() and then t2.accept()\par
       t3.accept("Java String");\par
       \par
    \}\par
\}\par
\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:43: Java String\par
 with length : 11\par
\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:43: Java String\par
 with length : 11\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:44: Java String\par
with length : 11\par
\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\par
\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\par
\cf2\par
\cf3\b Abhishek Rana (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\par
\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 12:44: Java String\par
 with length : 11\par
\cf2\par
\cf3\b MAYANK KUMAR (to Everyone)\b0 : \cf1 12:45: Java String\par
 with length : 11\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:45: Java String\par
 with length : 11\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:45: Java String\par
 with length : 11\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:47: i->System.out.println(" with length : " + i.length()\cf2\par
\cf3\b Saloni Dhawan (to Everyone)\b0 : \cf1 12:47: Java String\par
 with length : 11\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:47: import java.util.function.*;\par
interface tempCon<T>\{\par
\tab void accept(T  x);\par
\tab default tempCon<T> andThen(tempCon<? super T> t)\par
\tab\{\par
\tab\tab //t.accept(x);\par
\tab\tab tempCon<T> t2=(x) -> \{accept(x); t.accept(x);\};\par
\tab\tab return t2;\tab\tab\par
\tab\}\par
\}\par
public class MainClass \{\par
    public static void main(String[] args) \{\par
       tempCon<String> t1=i->System.out.println(i);  \par
       //tempCon<String> t2=i->System.out.println(" with length : " + i.length()); \par
       tempCon<String> t3=t1.andThen(i->System.out.println(" with length : " + i.length())); //t1.accept() and then t2.accept()\par
       t3.accept("Java String");\par
       \par
    \}\par
\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:51: import java.util.function.*;\par
import java.util.*;\par
interface tempCon<T>\{\par
\tab void accept(T  x);\par
\tab default tempCon<T> andThen(tempCon<? super T> t)\par
\tab\{\par
\tab\tab //t.accept(x);\par
\tab\tab tempCon<T> t2=(x) -> \{accept(x); t.accept(x);\};\par
\tab\tab return t2;\tab\tab\par
\tab\}\par
\}\par
public class MainClass \{\par
    public static void main(String[] args) \{\par
//       tempCon<String> t1=i->System.out.println(i);  \par
//       //tempCon<String> t2=i->System.out.println(" with length : " + i.length()); \par
//       tempCon<String> t3=t1.andThen(i->System.out.println(" with length : " + i.length())); //t1.accept() and then t2.accept()\par
//       t3.accept("Java String");\par
    \tab\par
    \tab\par
    \tab\par
    \tab   Consumer<Integer> c1= i-> System.out.print(" "+i);\par
    \tab   Consumer<Integer> c2 = c1.andThen( i-> System.out.print("(printed "+i+")"));\par
    \tab   List<Integer> integerList=Arrays.asList(1, 10, 200, 101, -10, 0);\par
    \tab   printList(integerList,c2);\par
    \tab  \}\par
    \tab  public static void printList(List<Integer> listOfIntegers, Consumer<Integer> consumer)\{\par
    \tab   for(Integer integer:listOfIntegers)\{\par
    \tab    consumer.accept(integer);\par
    \tab   \}\par
    \tab  \}\par
    \tab\}\par
\cf2\par
\cf3\b Shivaksh Ahalawat (to Everyone)\b0 : \cf1 12:52:  1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 12:52:  1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b Kushagra Gupta (to Everyone)\b0 : \cf1 12:52: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 12:52: \par
\par
1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\par
\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 12:52:  1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b Vijeta Vinod Savant (to Everyone)\b0 : \cf1 12:53: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\par
\cf2\par
\cf3\b Shipra Yadav (to Everyone)\b0 : \cf1 12:53: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b Saumya Vishwakarma (to Everyone)\b0 : \cf1 12:53: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 12:53:  1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed \cf2\par
\cf3\b Ravi Pratap (to Everyone)\b0 : \cf1 12:53: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 12:53: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed \cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:53:  1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:53: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed \par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 12:53: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 12:54:  1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 12:54: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\cf2\par
\cf3\b shivendra gupta (to Everyone)\b0 : \cf1 12:54: 1(printed 1) 10(printed 10) 200(printed 200) 101(printed 101) -10(printed -10) 0(printed 0)\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 13:04:    \tab Consumer<Integer> c1= i-> System.out.print(" "+i);\par
 \par
    \tab Consumer<Integer> c2 = c1.andThen(i-> System.out.print(i%2==0 ? " Even": "Odd"));\par
    \tab c2.accept(12);\par
    \tab\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 13:05: 12 Even\cf2\par
\cf3\b Shikhar Shukla (to Everyone)\b0 : \cf1 13:07: import java.util.function.*;\par
import java.util.*;\par
public class MainClass \{\par
    public static void main(String[] args) \{\par
        Scanner sc=new Scanner(System.in);\par
        Consumer<Integer> c1= i-> System.out.print(" "+i);\par
         Consumer<Integer> c2 = c1.andThen(i-> System.out.print(i%2==0 ? " Even": "Odd"));\par
         c2.accept(12);\par
      \}\par
     \}\cf2\par
\cf3\b AMAN SAXENA (to Everyone)\b0 : \cf1 13:08: thank you ma'am\cf2\par
\cf3\b Deep Shikhar Singh (to Everyone)\b0 : \cf1 13:08: thank you ma'am\cf2\par
\cf3\b Harthik Ps (to Everyone)\b0 : \cf1 13:08: thank you ma'am\par
\cf2\par
\cf3\b Piyush Shukla (to Everyone)\b0 : \cf1 13:08: Thank you Ma'am\cf2\par
\cf3\b Abhishek Kaushik (to Everyone)\b0 : \cf1 13:08: Thank you Ma'am\par
\cf2\par
\cf3\b Atul Gupta (to Everyone)\b0 : \cf1 13:08: thank you maam\cf2\par
\cf3\b Naveen Kumar Mittal (to Everyone)\b0 : \cf1 13:08: thank you ma'am\cf0\par
}
 