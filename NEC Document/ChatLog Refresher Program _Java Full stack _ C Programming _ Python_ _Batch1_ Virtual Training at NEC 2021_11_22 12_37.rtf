{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fcharset0 Segoe UI;}}
{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red59\green182\blue60;}
\viewkind4\uc1\pard\cf1\b\f0\fs24 Chat Log   C:\\Users\\acer\\Documents\\ChatLog Refresher Program _Java Full stack _ C Programming _ Python_ _Batch1_ Virtual Training at NEC 2021_11_22 12_37.rtf\b0\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:13: John\par
23\par
True\par
Traceback (most recent call last):\par
  File "C:/Users/mk/AppData/Local/Programs/Python/Python310/example nec/Class attri.py", line 26, in <module>\par
    print(s.age)\par
AttributeError: 'Student' object has no attribute 'age'\par
\cf2\par
\cf3\b Mohit Rai (to Everyone)\b0 : \cf1 12:13: Traceback (most recent call last):\par
  File "C:/Users/Mohit Rai/AppData/Local/Programs/Python/Python310/hdh.py", line 26, in <module>\par
    print(s.age)\par
AttributeError: 'Student' object has no attribute 'age'\cf2\par
\cf3\b Mohd Atyab (to Everyone)\b0 : \cf1 12:14: Done\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:15: EmployeeClass.py\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:15: class Employee:\par
   'Common base class for all employees'\par
   empCount = 0\par
\par
   def __init__(self, name, salary):\par
      self.name = name\par
      self.salary = salary\par
      Employee.empCount += 1\par
   \par
   def displayCount(self):\par
     print ("Total Employee %d" % Employee.empCount)\par
\par
   def displayEmployee(self):\par
      print ("Name : ", self.name,  ", Salary: ", self.salary)\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:16: >>> from EmployeeClass import Employee\par
\par
>>> print ("Employee.__doc__:", Employee.__doc__)\par
Employee.__doc__: Common base class for all employees\par
\par
>>> print ("Employee.__name__:", Employee.__name__)\par
Employee.__name__: Employee\par
\par
>>> print ("Employee.__module__:", Employee.__module__)\par
Employee.__module__: EmployeeClass\par
\par
>>> print ("Employee.__bases__:", Employee.__bases__)\par
Employee.__bases__: (<class 'object'>,)\par
\par
>>> print ("Employee.__dict__:", Employee.__dict__)\par
Employee.__dict__: \{'__module__': 'EmployeeClass', '__doc__': 'Common base class for all employees', 'empCount': 2, '__init__': <function Employee.__init__ at 0x02E3ADF0>, 'displayCount': <function Employee.displayCount at 0x02E3ADA8>, 'displayEmployee': <function Employee.displayEmployee at 0x02E3AD60>, '__dict__': <attribute '__dict__' of 'Employee' objects>, '__weakref__': <attribute '__weakref__' of 'Employee' objects>\}\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:18: from EmployeeClass import Employee\par
\par
print ("Employee.__doc__:", Employee.__doc__)\par
#Employee.__doc__: Common base class for all employees\par
\par
print ("Employee.__name__:", Employee.__name__)\par
#Employee.__name__: Employee\par
\par
print ("Employee.__module__:", Employee.__module__)\par
#Employee.__module__: EmployeeClass\par
\par
print ("Employee.__bases__:", Employee.__bases__)\par
#Employee.__bases__: (<class 'object'>,)\par
\par
print ("Employee.__dict__:", Employee.__dict__)\par
#Employee.__dict__: \{'__module__': 'EmployeeClass', '__doc__': 'Common base class for all employees', 'empCount': 2, '__init__': <function Employee.__init__ at 0x02E3ADF0>, 'displayCount': <function Employee.displayCount at 0x02E3ADA8>, 'displayEmployee': <function Employee.displayEmployee at 0x02E3AD60>, '__dict__': <attribute '__dict__' of 'Employee' objects>, '__weakref__': <attribute '__weakref__' of 'Employee' objects>\}\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:19: Employee.__doc__: Common base class for all employees\par
Employee.__name__: Employee\par
Employee.__module__: EmployeeClass\par
Employee.__bases__: (<class 'object'>,)\par
Employee.__dict__: \{'__module__': 'EmployeeClass', '__doc__': 'Common base class for all employees', 'empCount': 0, '__init__': <function Employee.__init__ at 0x000001D3BA19C310>, 'displayCount': <function Employee.displayCount at 0x000001D3BA19F5B0>, 'displayEmployee': <function Employee.displayEmployee at 0x000001D3BA19F640>, '__dict__': <attribute '__dict__' of 'Employee' objects>, '__weakref__': <attribute '__weakref__' of 'Employee' objects>\}\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:21: Employee.__doc__: Common base class for all employees\par
Employee.__name__: Employee\par
Employee.__module__: oop7\par
Employee.__bases__: (<class 'object'>,)\par
Employee.__dict__: \{'__module__': 'oop7', '__doc__': 'Common base class for all employees', 'empCount': 0, '__init__': <function Employee.__init__ at 0x00000259F8CBCD30>, 'displayCount': <function Employee.displayCount at 0x00000259F8CBCDC0>, 'displayEmployee': <function Employee.displayEmployee at 0x00000259F8CBCE50>, '__dict__': <attribute '__dict__' of 'Employee' objects>, '__weakref__': <attribute '__weakref__' of 'Employee' objects>\}\par
\cf2\par
\cf3\b Mohit Rai (to Everyone)\b0 : \cf1 12:21: Employee.__doc__: Common base class for all employees\par
Employee.__name__: Employee\par
Employee.__module__: EmployeeClass\par
Employee.__bases__: (<class 'object'>,)\par
Employee.__dict__: \{'__module__': 'EmployeeClass', '__doc__': 'Common base class for all employees', 'empCount': 0, '__init__': <function Employee.__init__ at 0x000001D3BA19C310>, 'displayCount': <function Employee.displayCount at 0x000001D3BA19F5B0>, 'displayEmployee': <function Employee.displayEmployee at 0x000001D3BA19F640>, '__dict__': <attribute '__dict__' of 'Employee' objects>, '__weakref__': <attribute '__weakref__' of 'Employee' objects>\}\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:23: class Point:\par
   def __init__( self, x=0, y=0):\par
      self.x = x\par
      self.y = y\par
   def __del__(self):\par
      class_name = self.__class__.__name__\par
      print (class_name, "destroyed")\par
\par
pt1 = Point()\par
print (id(pt1)) # prints the ids of the objects\par
del pt1\par
\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:23: 1614099643840\par
Point destroyed\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:23: 2895826200528\par
Point destroyed\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:25: 2016746149520\par
Point destroyed\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:30: class Animal:  \par
    def speak(self):  \par
        print("Animal Speaking")  \par
\par
#child class Dog inherits the base class Animal  \par
\par
class Dog(Animal):  \par
    def bark(self):  \par
        print("dog barking")  \par
\par
\par
d = Dog()  \par
d.bark()  \par
d.speak()  \par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:31: dog barking\par
Animal Speaking\cf2\par
\cf3\b Mohit Rai (to Everyone)\b0 : \cf1 12:31: dog barking\par
Animal Speaking\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:31: dog barking\par
Animal Speaking\par
\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:35: class Employee:\par
    def stName(self,name):\par
        self.name=name\par
    def disp(self):  \par
        print("Employee: ", self.name)  \par
\par
class Sal_Emp(Employee):\par
    def stNameSal(self, name,sal):\par
        self.sal=sal\par
        Employee.stName(Employee,name)\par
    def prnt(self):  \par
        print("Salaried Employee: ", self.name, self.sal)  \par
\par
e=Sal_Emp()\par
e.stNameSal("Jay",102)\par
e.disp() # using disp() from parent class\par
e.prnt()\par
print(e.name, e.sal)\par
\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:35: Employee:  Jay\par
Salaried Employee:  Jay 102\par
Jay 102\par
\cf2\par
\cf3\b Mohit Rai (to Everyone)\b0 : \cf1 12:35: Employee:  Jay\par
Salaried Employee:  Jay 102\par
Jay 102\par
\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:35: dog barking\par
Animal Speaking\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:36: Employee:  Jay\par
Salaried Employee:  Jay 102\par
Jay 102\cf2\par
\cf3\b Monica (to Everyone)\b0 : \cf1 12:36: class Employee:\par
    def stName(self,name):\par
        self.name=name\par
    def disp(self):  \par
        print("Employee: ", self.name)  \par
\par
class Sal_Emp(Employee):\par
    def stNameSal(self, name,sal):\par
        self.sal=sal\par
        Employee.stName(Employee,name)\par
    def prnt(self):  \par
        print("Salaried Employee: ", self.name, self.sal)  \par
\par
e=Sal_Emp()\par
e.stNameSal("Jay",102)\par
e.disp() # using disp() from parent class\par
e.prnt()\par
print(e.name, e.sal)\par
\par
\par
\par
\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:36: Employee:  Jay\par
Salaried Employee:  Jay 102\par
Jay 102\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:36: Employee:  Jay\par
Salaried Employee:  Jay 102\par
Jay 102\par
\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:36: Employee:  Jay\par
Salaried Employee:  Jay 102\par
Jay 102\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:37: Thank you Ma\cf2\par
\cf3\b Akshay Singh (to Everyone)\b0 : \cf1 12:37: Ma'am\cf2\par
\cf3\b Unnati (to Everyone)\b0 : \cf1 12:37: thanku mam\cf2\par
\cf3\b Mohd Atyab (to Everyone)\b0 : \cf1 12:37: Bye mam\cf2\par
\cf3\b APURV AGNIHOTRI (to Everyone)\b0 : \cf1 12:37: thank you ma'am\cf0\par
}
 